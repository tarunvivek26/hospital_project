const doctorsModel = require('../models/doctorsSchema')
const userModel = require('../models/userSchema')
const feedbackModel = require('../models/feedbackSchema')
const adminModel = require('../models/adminSchema')

const getAllUsersController = async(req,res) =>{
    try{
       const users = await userModel.find() 
        res.status(200).json({
            success:true,
            message:'users data list',
            data:users,
        })
    }catch(error){
        console.log(error);
        res.status(500).json({success:false,message:'error while fetching users',error})
    }

}

const getAllDoctorsController = async(req,res) =>{
    try{
        const doctors = await doctorsModel.find() 
         res.status(200).json({
             success:true,
             message:'doctors data list',
             data:doctors,
         })
     }catch(error){
         console.log(error);
         res.status(500).json({success:false,message:'error while fetching users',error})
     }
}

const feedbackCtrl = async(req,res) =>{
    try{
        const newUser = new feedbackModel(req.body)
        await newUser.save()
        res.status(201).json({message:`Register Sucessfully`,success:true});
    }catch(error){
        console.log(error);
        res.status(500).json({success:false,message:`Register Controller ${error.message}`})
    }
}
const loginController = async (req,res) =>{
    try{
        const user = await adminModel.findOne({email:req.body.email})
        if(!user){
            return res.status(200).json({message:`user not found`,success:false})
        }
        if(user.password == req.body.password){
            res.status(200).json({message:`Login Success`,success:true,
            data:{
                name:user.name,
                email:user.email,
                password:user.password
            }})
        }
        
    }catch(error){
        console.log(error)
        res.status(500).json({message:`Error in login CTRL ${error.message}`})
    }
}

module.exports = {getAllUsersController,getAllDoctorsController,feedbackCtrl,loginController}